@page "/Medicines/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Medicine</h3>
<hr />
<br />

<EditForm Model="@medicine" OnValidSubmit="CreateMedicine">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Medicine Name: </label>
        <div>
            <InputText @bind-Value="@medicine.MedicineName" class="form-control" />
            <ValidationMessage For="@(() => medicine.MedicineName)" />
        </div>
    </div>

    <div class="form-group">
        <label>Medicine Type: </label>
        <div>
            <InputText @bind-Value="@medicine.MedicineType" class="form-control" />
            <ValidationMessage For="@(() => medicine.MedicineType)" />
        </div>
    </div>

    <div class="form-group">
        <label>Medicine Descrpition: </label>
        <div>
            <InputText @bind-Value="@medicine.MedicineDescription" class="form-control" />
            <ValidationMessage For="@(() => medicine.MedicineDescription)" />
        </div>
    </div>

    <div class="form-group">
        <label>Medicine price: </label>
        <div>
            <InputNumber @bind-Value="@medicine.MedicinePrice" class="form-control" />
            <ValidationMessage For="@(() => medicine.MedicinePrice)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Medicine
    </button>
</EditForm>

@code { Medicine medicine = new Medicine();

    private async Task CreateMedicine()
    {
        await _client.PostAsJsonAsync(Endpoints.MedicinesEndpoint, medicine);
        _navManager.NavigateTo("/medicines/");
    } }

