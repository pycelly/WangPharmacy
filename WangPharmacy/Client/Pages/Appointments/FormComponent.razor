@inject HttpClient _client

<EditForm Model="@appointment" OnValidSubmit="@OnVaildSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Customer: </label>
            <div>
                <InputSelect @bind-Value="appointment.CustomerId" class="form-control">
                    <option value="">-- Select Customer --</option>
                    @if (Customers != null)
                    {
                        foreach (var customer in Customers)
                        {
                            <option value="@customer.Id">@customer.CustomerName</option>}
                    }
                </InputSelect>
                <ValidationMessage For="@(() => appointment.CustomerId)" />
            </div>
        </div>

        <div class="form-group">
            <label>Staff: </label>
            <div>
                <InputSelect @bind-Value="appointment.StaffId" class="form-control">
                    <option value="">-- Select Staff --</option>
                    @if (Staffs != null)
                    {
                        foreach (var staff in Staffs)
                        {
                            <option value="@staff.Id">@staff.StaffName, @staff.StaffGender</option>}


                    }

                </InputSelect>
                <ValidationMessage For="@(() => appointment.StaffId)" />
            </div>
        </div>
        <div class="form-group">
            <label>Appointment Date: </label>
            <div>
                <InputDate @bind-Value="@appointment.AppointmentDateTime" class="form-control" />
                <ValidationMessage For="@(() =>appointment.AppointmentDateTime)" />
            </div>
        </div>
        <div class="form-group">
            <label>Appointment Time: </label>
            <div>
                <InputSelect @bind-Value="appointment.AppointmentTime" class="form-control">
                    <option value="">-- Select Time --</option>
                    <option value="8:00"> 8:00</option>
                    <option value="9:00"> 9:00</option>
                    <option value="10:00">10:00</option>
                    <option value="11:00">11:00</option>
                    <option value="12:00">12:00</option>
                    <option value="13:00">13:00</option>
                    <option value="14:00">14:00</option>
                    <option value="15:00">15:00</option>
                    <option value="16:00">16:00</option>
                    <option value="17:00">17:00</option>
                    <option value="18:00">18:00</option>
                    <option value="19:00">19:00</option>
                    <option value="20:00">20:00</option>

                </InputSelect>
                <ValidationMessage For="@(() => appointment.AppointmentTime)" />
            </div>
        </div>


    </fieldset>
    @if (!Disabled)
    {

        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>

    }
    <BackToList Target="appointments" />
</EditForm>

@code{ 
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Appointment appointment { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnVaildSubmit { get; set; }

    private IList<Customer> Customers;
    private IList<Staff> Staffs;

    protected async override Task OnInitializedAsync()
    {
        Staffs = await _client.GetFromJsonAsync<List<Staff>>($"{Endpoints.StaffsEndpoint}");
        Customers = await _client.GetFromJsonAsync<List<Customer>>($"{Endpoints.CustomersEndpoint}");
    }

    }