@page "/prescriptions/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New prescription</h3>
<hr />
<br />

<EditForm Model="@prescription" OnValidSubmit="CreatePrescription">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Appointments: </label>
        <div>
            <InputSelect @bind-Value="prescription.AppointmentId" class="form-control">
                <option value="">-- Select Appointment --</option>
                @if (Appointments != null)
                {
                    foreach (var appointment in Appointments)
                    {
<option value="@appointment.Id">@appointment.Id</option>}
}
            </InputSelect>
            <ValidationMessage For="@(() => prescription.AppointmentId)" />
        </div>
    </div>

    <div class="form-group">
        <label>prescription Name: </label>
        <div>
            <InputText @bind-Value="@prescription.PrescriptionName" class="form-control" />
            <ValidationMessage For="@(() => prescription.PrescriptionName)" />
        </div>
    </div>
    <div class="form-group">
        <label>prescription Description: </label>
        <div>
            <InputText @bind-Value="@prescription.PrescriptionDescription" class="form-control" />
            <ValidationMessage For="@(() => prescription.PrescriptionDescription)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create prescription
    </button>
</EditForm>

@code { Prescription prescription = new Prescription();

    private IList<Appointment> Appointments;


    protected async override Task OnInitializedAsync()
    {
        Appointments = await _client.GetFromJsonAsync<List<Appointment>>($"{Endpoints.AppointmentsEndpoint}");
        
    }

    private async Task CreatePrescription()
    {
        await _client.PostAsJsonAsync(Endpoints.PrescriptionsEndpoint, prescription);
        _navManager.NavigateTo("/prescriptions/");
    } }